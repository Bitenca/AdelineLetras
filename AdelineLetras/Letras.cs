namespace AdelineLetras
{
    class Letras
    {//=====================================    A   =======================================
        public double[,] ATipo1 = { {-1,-1, 1, 1,-1,-1,-1 },
                                    {-1,-1,-1, 1,-1,-1,-1 },
                                    {-1,-1,-1, 1,-1,-1,-1 },
                                    {-1,-1, 1,-1, 1,-1,-1 },
                                    {-1,-1, 1,-1, 1,-1,-1 },
                                    {-1, 1, 1, 1, 1, 1,-1 },
                                    {-1, 1,-1,-1,-1, 1,-1 },
                                    {-1, 1,-1,-1,-1, 1,-1 },
                                    { 1, 1, 1,-1, 1, 1, 1 } },

                         ATipo2 = { {-1,-1,-1, 1,-1,-1,-1 },
                                    {-1,-1,-1, 1,-1,-1,-1 },
                                    {-1,-1,-1, 1,-1,-1,-1 },
                                    {-1,-1, 1,-1, 1,-1,-1 },
                                    {-1,-1, 1,-1, 1,-1,-1 },
                                    {-1, 1,-1,-1,-1, 1,-1 },
                                    {-1, 1, 1, 1, 1, 1,-1 },
                                    {-1, 1,-1,-1,-1, 1,-1 },
                                    {-1, 1,-1,-1,-1, 1,-1 } },

                         ATipo3 = { {-1,-1,-1, 1,-1,-1,-1 },
                                    {-1,-1,-1, 1,-1,-1,-1 },
                                    {-1,-1, 1,-1, 1,-1,-1 },
                                    {-1,-1, 1,-1, 1,-1,-1 },
                                    {-1, 1,-1,-1,-1, 1,-1 },
                                    {-1, 1, 1, 1, 1, 1,-1 },
                                    { 1,-1,-1,-1,-1,-1, 1 },
                                    { 1,-1,-1,-1,-1,-1, 1 },
                                    { 1, 1,-1,-1,-1, 1, 1 } },


       //=================================     B    ==================================
                         BTipo1 = { { 1, 1, 1, 1, 1, 1,-1 },
                                    {-1, 1,-1,-1,-1,-1, 1 },
                                    {-1, 1,-1,-1,-1,-1, 1 },
                                    {-1, 1,-1,-1,-1,-1, 1 },
                                    {-1, 1, 1, 1, 1, 1,-1 },
                                    {-1, 1,-1,-1,-1,-1, 1 },
                                    {-1, 1,-1,-1,-1,-1, 1 },
                                    {-1, 1,-1,-1,-1,-1, 1 },
                                    { 1, 1, 1, 1, 1, 1,-1 } },

                         BTipo2 = { { 1, 1, 1, 1, 1, 1,-1 },
                                    { 1,-1,-1,-1,-1,-1, 1 },
                                    { 1,-1,-1,-1,-1,-1, 1 },
                                    { 1,-1,-1,-1,-1,-1, 1 },
                                    { 1, 1, 1, 1, 1, 1,-1 },
                                    { 1,-1,-1,-1,-1,-1, 1 },
                                    { 1,-1,-1,-1,-1,-1, 1 },
                                    { 1,-1,-1,-1,-1,-1, 1 },
                                    { 1, 1, 1, 1, 1, 1,-1 } },

                         BTipo3 = { { 1, 1, 1, 1, 1, 1,-1 },
                                    {-1, 1,-1,-1,-1,-1, 1 },
                                    {-1, 1,-1,-1,-1,-1, 1 },
                                    {-1, 1, 1, 1, 1, 1,-1 },
                                    {-1, 1,-1,-1,-1,-1, 1 },
                                    {-1, 1,-1,-1,-1,-1, 1 },
                                    {-1, 1,-1,-1,-1,-1, 1 },
                                    {-1, 1,-1,-1,-1,-1, 1 },
                                    { 1, 1, 1, 1, 1, 1,-1 } },


      //==================================    C     =================================
                        CTipo1 = { {-1,-1, 1, 1, 1, 1, 1 },
                                   {-1, 1,-1,-1,-1,-1, 1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   {-1, 1,-1,-1,-1,-1, 1 },
                                   {-1,-1, 1, 1, 1, 1,-1 } },

                        CTipo2 = { {-1,-1, 1, 1, 1,-1,-1 },
                                   {-1, 1,-1,-1,-1, 1,-1 },
                                   { 1,-1,-1,-1,-1,-1, 1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   { 1,-1,-1,-1,-1,-1, 1 },
                                   {-1, 1,-1,-1,-1, 1,-1 },
                                   {-1,-1, 1, 1, 1,-1,-1 } },

                        CTipo3 = { {-1,-1, 1, 1, 1,-1, 1 },
                                   {-1, 1,-1,-1,-1, 1, 1 },
                                   { 1,-1,-1,-1,-1,-1, 1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   { 1,-1,-1,-1,-1,-1, 1 },
                                   {-1, 1,-1,-1,-1, 1,-1 },
                                   {-1,-1, 1, 1, 1,-1,-1 } },



       //================================      D    ===================================
                        DTipo1 = { { 1, 1, 1, 1, 1,-1,-1 },
                                   {-1, 1,-1,-1,-1, 1,-1 },
                                   {-1, 1,-1,-1,-1,-1, 1 },
                                   {-1, 1,-1,-1,-1,-1, 1 },
                                   {-1, 1,-1,-1,-1,-1, 1 },
                                   {-1, 1,-1,-1,-1,-1, 1 },
                                   {-1, 1,-1,-1,-1,-1, 1 },
                                   {-1, 1,-1,-1,-1, 1,-1 },
                                   { 1, 1, 1, 1, 1,-1,-1 } },

                        DTipo2 = { { 1, 1, 1, 1, 1,-1,-1 },
                                   { 1,-1,-1,-1,-1, 1,-1 },
                                   { 1,-1,-1,-1,-1,-1, 1 },
                                   { 1,-1,-1,-1,-1,-1, 1 },
                                   { 1,-1,-1,-1,-1,-1, 1 },
                                   { 1,-1,-1,-1,-1,-1, 1 },
                                   { 1,-1,-1,-1,-1,-1, 1 },
                                   { 1,-1,-1,-1,-1, 1,-1 },
                                   { 1, 1, 1, 1, 1,-1,-1 } },

                        DTipo3 = { { 1, 1, 1, 1, 1,-1,-1 },
                                   {-1, 1,-1,-1,-1, 1,-1 },
                                   {-1, 1,-1,-1,-1,-1, 1 },
                                   {-1, 1,-1,-1,-1,-1, 1 },
                                   {-1, 1,-1,-1,-1,-1, 1 },
                                   {-1, 1,-1,-1,-1,-1, 1 },
                                   {-1, 1,-1,-1,-1,-1, 1 },
                                   {-1, 1,-1,-1,-1, 1,-1 },
                                   { 1, 1, 1, 1, 1,-1,-1 } },



           //===========================     E    ==================================
                        ETipo1 = { { 1, 1, 1, 1, 1, 1, 1 },
                                   {-1, 1,-1,-1,-1,-1, 1 },
                                   {-1, 1,-1,-1,-1,-1,-1 },
                                   {-1, 1,-1, 1,-1,-1,-1 },
                                   {-1, 1, 1, 1,-1,-1,-1 },
                                   {-1, 1,-1, 1,-1,-1,-1 },
                                   {-1, 1,-1,-1,-1,-1,-1 },
                                   {-1, 1,-1,-1,-1,-1, 1 },
                                   { 1, 1, 1, 1, 1, 1, 1 } },

                        ETipo2 = { { 1, 1, 1, 1, 1, 1, 1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   { 1, 1, 1, 1, 1,-1,-1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   { 1,-1,-1,-1,-1,-1,-1 },
                                   { 1, 1, 1, 1, 1, 1, 1 } },

                        ETipo3 = { { 1, 1, 1, 1, 1, 1, 1 },
                                   {-1, 1,-1,-1,-1,-1, 1 },
                                   {-1, 1,-1,-1, 1,-1,-1 },
                                   {-1, 1, 1, 1, 1,-1,-1 },
                                   {-1, 1,-1,-1, 1,-1,-1 },
                                   {-1, 1,-1,-1,-1,-1,-1 },
                                   {-1, 1,-1,-1,-1,-1,-1 },
                                   {-1, 1,-1,-1,-1,-1, 1 },
                                   { 1, 1, 1, 1, 1, 1, 1 } },



      //===============================      J       ================================
                        JTipo1 = { {-1,-1,-1, 1, 1, 1, 1 },
                                   {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1, 1,-1,-1,-1, 1,-1 },
                                   {-1, 1,-1,-1,-1, 1,-1 },
                                   {-1,-1, 1, 1, 1,-1,-1 } },

                        JTipo2 = { {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1, 1,-1,-1,-1, 1,-1 },
                                   {-1, 1,-1,-1,-1, 1,-1 },
                                   {-1,-1, 1, 1, 1,-1,-1 } },

                        JTipo3 = { {-1,-1,-1,-1, 1, 1, 1 },
                                   {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1,-1,-1,-1,-1, 1,-1 },
                                   {-1, 1,-1,-1,-1, 1,-1 },
                                   {-1,-1, 1, 1, 1,-1,-1 } },



   //==================================       K      ===============================
                        KTipo1 = { { 1, 1, 1,-1,-1, 1, 1 },
                                   {-1, 1,-1,-1, 1,-1,-1 },
                                   {-1, 1,-1, 1,-1,-1,-1 },
                                   {-1, 1, 1,-1,-1,-1,-1 },
                                   {-1, 1, 1,-1,-1,-1,-1 },
                                   {-1, 1,-1, 1,-1,-1,-1 },
                                   {-1, 1,-1,-1, 1,-1,-1 },
                                   {-1, 1,-1,-1,-1, 1,-1 },
                                   { 1, 1, 1,-1,-1, 1, 1 } },

                        KTipo2 = { { 1,-1,-1,-1,-1, 1,-1 },
                                   { 1,-1,-1,-1, 1,-1,-1 },
                                   { 1,-1,-1, 1,-1,-1,-1 },
                                   { 1,-1, 1,-1,-1,-1,-1 },
                                   { 1, 1,-1,-1,-1,-1,-1 },
                                   { 1,-1, 1,-1,-1,-1,-1 },
                                   { 1,-1,-1, 1,-1,-1,-1 },
                                   { 1,-1,-1,-1, 1,-1,-1 },
                                   { 1,-1,-1,-1,-1, 1,-1 }},


                        KTipo3 = { { 1, 1, 1,-1,-1, 1, 1 },
                                   {-1, 1,-1,-1,-1, 1,-1 },
                                   {-1, 1,-1,-1, 1,-1,-1 },
                                   {-1, 1,-1, 1,-1,-1,-1 },
                                   {-1, 1, 1,-1,-1,-1,-1 },
                                   {-1, 1,-1, 1,-1,-1,-1 },
                                   {-1, 1,-1,-1, 1,-1,-1 },
                                   {-1, 1,-1,-1,-1, 1,-1 },
                                   { 1, 1, 1,-1,-1, 1, 1 } };

        //========================================== FIM =================================
        public double[,] getMatrizTotal()
        {
            int cont = 0;
            double[,] matrizTotal = new double[21, 64];
            double[] vetA1 = new double[64], vetA2 = new double[64], vetA3 = new double[64],
                     vetB1 = new double[64], vetB2 = new double[64], vetB3 = new double[64],
                     vetC1 = new double[64], vetC2 = new double[64], vetC3 = new double[64],
                     vetD1 = new double[64], vetD2 = new double[64], vetD3 = new double[64],
                     vetE1 = new double[64], vetE2 = new double[64], vetE3 = new double[64],
                     vetJ1 = new double[64], vetJ2 = new double[64], vetJ3 = new double[64],
                     vetK1 = new double[64], vetK2 = new double[64], vetK3 = new double[64];
            
            for (int i = 0; i < 9; i++)
            {
                for (int j = 0; j < 7; j++)
                {
                    vetA1[cont] = ATipo1[i, j];
                    vetA2[cont] = ATipo2[i, j];
                    vetA3[cont] = ATipo3[i, j];
                    vetB1[cont] = BTipo1[i, j];
                    vetB2[cont] = BTipo2[i, j];
                    vetB3[cont] = BTipo3[i, j];
                    vetC1[cont] = CTipo1[i, j];
                    vetC2[cont] = CTipo2[i, j];
                    vetC3[cont] = CTipo3[i, j];
                    vetD1[cont] = DTipo1[i, j];
                    vetD2[cont] = DTipo2[i, j];
                    vetD3[cont] = DTipo3[i, j];
                    vetE1[cont] = ETipo1[i, j];
                    vetE2[cont] = ETipo2[i, j];
                    vetE3[cont] = ETipo3[i, j];
                    vetJ1[cont] = JTipo1[i, j];
                    vetJ2[cont] = JTipo2[i, j];
                    vetJ3[cont] = JTipo3[i, j];
                    vetK1[cont] = KTipo1[i, j];
                    vetK2[cont] = KTipo2[i, j];
                    vetK3[cont] = KTipo3[i, j];

                    cont++;


                    //bias
                    vetA1[63] = 1;
                    vetA2[63] = 1;
                    vetA3[63] = 1;
                    vetB1[63] = 1;
                    vetB2[63] = 1;
                    vetB3[63] = 1;
                    vetC1[63] = 1;
                    vetC2[63] = 1;
                    vetC3[63] = 1;
                    vetD1[63] = 1;
                    vetD2[63] = 1;
                    vetD3[63] = 1;
                    vetE1[63] = 1;
                    vetE2[63] = 1;
                    vetE3[63] = 1;
                    vetJ1[63] = 1;
                    vetJ2[63] = 1;
                    vetJ3[63] = 1;
                    vetK1[63] = 1;
                    vetK2[63] = 1;
                    vetK3[63] = 1;
                }
            }

            for(int k = 0; k < 64; k++)
            {
                matrizTotal[0, k] = vetA1[k];
                matrizTotal[1, k] = vetB1[k];
                matrizTotal[2, k] = vetC1[k];
                matrizTotal[3, k] = vetD1[k];
                matrizTotal[4, k] = vetE1[k];
                matrizTotal[5, k] = vetJ1[k];
                matrizTotal[6, k] = vetK1[k];
                matrizTotal[7, k] = vetA2[k];
                matrizTotal[8, k] = vetB2[k];
                matrizTotal[9, k] = vetC2[k];
                matrizTotal[10, k] = vetD2[k];
                matrizTotal[11, k] = vetE2[k];
                matrizTotal[12, k] = vetJ2[k];
                matrizTotal[13, k] = vetK2[k];
                matrizTotal[14, k] = vetA3[k];
                matrizTotal[15, k] = vetB3[k];
                matrizTotal[16, k] = vetC3[k];
                matrizTotal[17, k] = vetD3[k];
                matrizTotal[18, k] = vetE3[k];
                matrizTotal[19, k] = vetJ3[k];
                matrizTotal[20, k] = vetK3[k];
  
            }

            return matrizTotal;
        }
       
        public double[,] pesos = 
          { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, };

        public double[,] saidadesejada =
          { { 1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1 },
            {-1, 1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1 },
            {-1,-1, 1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1 },
            {-1,-1,-1, 1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1 },
            {-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1, 1,-1,-1 },
            {-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1, 1,-1 },
            {-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1, 1,-1,-1,-1,-1,-1,-1, 1 }, };

        public double[,] matrizBase =    { { 0, 0, 0, 0, 0, 0, 0 },
                                           { 0, 0, 0, 0, 0, 0, 0 },
                                           { 0, 0, 0, 0, 0, 0, 0 },
                                           { 0, 0, 0, 0, 0, 0, 0 },
                                           { 0, 0, 0, 0, 0, 0, 0 },
                                           { 0, 0, 0, 0, 0, 0, 0 },
                                           { 0, 0, 0, 0, 0, 0, 0 },
                                           { 0, 0, 0, 0, 0, 0, 0 },
                                           { 0, 0, 0, 0, 0, 0, 0 }, };

    }
}
